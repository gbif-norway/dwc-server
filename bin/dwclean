#!/usr/bin/perl

use strict;
use warnings;
use utf8;
use 5.14.0;
use open qw/:std :utf8/;

use Getopt::Std;
use Parse::CSV;

do 'Artsnavn.pm';

#use Geonames;
use DwC;

package GBIFNorway;

our %names = ();
our %filters = ();
our %cleaners = ();

for my $format (glob 'formats/*.pl') {
  do $format;
}

package main;

# fiks dette + lag man
our $usage = <<EOS;
$0  [-hmruv]
    [-b basisofrecord]
    [-c collectioncode]
    [-d modified]
    [-f format]
    [-i institutioncode]
    [-k kingdom]
    [-x verbatim]
EOS

our $default_f = "dwc";

our ($opt_b, $opt_c, $opt_d, $opt_e, $opt_f, $opt_g, $opt_h, $opt_i);
our ($opt_k, $opt_m, $opt_r, $opt_s, $opt_u, $opt_v, $opt_x);
getopts("k:x:s:i:c:d:e:f:ghruvmb:");

if($opt_h) {
  print($usage) and exit;
}

our $verbatim;
if($opt_x) {
  open $verbatim, ">", $opt_x;
  say $verbatim join("\t", @DwC::terms);
}

say STDOUT join("\t", @DwC::terms);

my $filter = $GBIFNorway::filters{$opt_f || $default_f};
my $n = $GBIFNorway::names{$opt_f || $default_f};

my %options = (
  handle => \*STDIN,
  filter => $filter,
  binary => 1,
  sep_char => "\t",
  quote_char => undef,
  escape_char => undef,
  encoding_in  => "utf8"
);

# stygg hack
if ($GBIFNorway::names{$opt_f || $default_f}) {
  $options{names} = $GBIFNorway::names{$opt_f || $default_f},
}

my $csv = Parse::CSV->new(%options);

my %uniques;
my $errno = 0;

my $nn = 0;

while (my $raw = $csv->fetch) {
  my $dwc = DwC->new($raw, $csv->row);

  if($opt_b) {
    $$dwc{basisOfRecord} = $opt_b;
    #$$dwc{occurrenceRemarks} = "$$dwc{institutionCode}:$$dwc{collectionCode}:$$dwc{catalogNumber}. $$dwc{occurrenceRemarks}";
  }

  if($opt_m) {
    $nn = $nn + 1;
    $$dwc{catalogNumber} = $nn;
  }

  my $cat = $$dwc{catalogNumber};
  my $cleaner = $GBIFNorway::cleaners{$opt_f || $default_f};

  if($opt_x) {
    $dwc->printcsv($verbatim, \@DwC::terms);
  }

  &$cleaner($dwc);

  if($opt_i) {
    $dwc->addinfo("Replaced institutionCode with $opt_i", "institutionCode");
    $$dwc{institutionCode} = $opt_i if($opt_i);
  }
  if($opt_c) {
    $dwc->addinfo("Replaced collectionCode with $opt_c", "collectionCode");
    $$dwc{collectionCode} = $opt_c if($opt_c);
  }

  if(!$opt_u) {
    if($cat) {
      if($uniques{$cat}) {
        $dwc->adderror("Duplicate catalogNumber", "core");
      }
      $uniques{$cat} = 1;
    }
  }

  if($opt_d) {
    $$dwc{modified} = $opt_d;
  }

  $dwc->validatebasisofrecord;
  $dwc->validatedates;
  $dwc->validateelevation;

  my $overwrite = 1;
  if($opt_r) {
    $overwrite = 0;
  }
  eval {
    Artsnavn::addtaxonomy($dwc, $opt_k, $overwrite);
  };
  $dwc->addwarning($@, "name") if $@;

  $$dwc{modified} = $$dwc{dateLastModified} if $$dwc{dateLastModified};
  $$dwc{modified} = $$dwc{'dcterms:modified'} if $$dwc{'dcterms:modified'};

  #if($$dwc{country} && !$$dwc{continent}) {
  #  $$dwc{continent} = Geonames::continent($$dwc{country});
  #}

  $dwc->handlecoordinates;
  if($$dwc{decimalLatitude} && $$dwc{decimalLongitude}) {
    $dwc->validategeography;
  }

  # flytt inn i DwC~?
  my $triplet;
  if($$dwc{occurrenceID}) {
    $triplet = $$dwc{occurrenceID};
  } else {
    $triplet = $dwc->triplet;
  }
  my $row = $$dwc{_row};
  for my $error (@{$$dwc{errors}}) {
    $errno++;
    say STDERR "$errno\terror\t$triplet\t$row\t$$error[0]\t$$error[1]";
  }
  for my $warning (@{$$dwc{warnings}}) {
    $errno++;
    say STDERR "$errno\twarning\t$triplet\t$row\t$$warning[0]\t$$warning[1]";
  }

  if($opt_v) {
    for my $info (@{$$dwc{info}}) {
      $errno++;
      say STDERR "$errno\tinfo\t$triplet\t$row\t$$info[0]\t$$info[1]";
    }
  }
  next if (@{$$dwc{errors}});

  $dwc->printcsv(\*STDOUT, \@DwC::terms);
}

if($csv->errstr) {
  die($csv->errstr . "\n");
}

close($verbatim) if $verbatim;

